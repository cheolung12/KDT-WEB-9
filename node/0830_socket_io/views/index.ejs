<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <script src="/socket.io/socket.io.js"></script>
    <title>Document</title>
    <style>
      #body {
        width: 100%;
        height: 70vh;
        position: relative;
        background: #c7d6e0;
        overflow: auto;
        padding-top: 10px;
        margin-bottom: 10px;
      }
      #welcome {
        display: flex;
        width: fit-content;
        color: white;
        font-size: 12px;
        margin: 0 auto;  /* 중앙배치 */
        background-color: rgba(0, 0, 0, 0.2);
        border-radius: 10px;
        padding: 5px 10px;
      }
      #chat {
        position: absolute;
        bottom: 0px;
        display: flex;
        justify-content: space-between;
        width: 100%;
        margin: 5px 0px;
      }
      #chat input {
        width: 70%;
        padding: 5px;
        padding-left: 10px;
        width: 100%;
        border: 0.1px solid rgba(0,0,0,0.3);
        border-radius: 25px;
        margin: 0px 5px;
      }
      #chat button {
        background-color: #fae100;
        border: none;
        width: 30px;
        height: 30px;
        border-radius: 50%;
        margin-right: 5px;
      }
      .my-chat{
        display: flex;
        justify-content: end;
        padding: 2px 0px;
      }
      .my-chat p{
        margin: 0;
        padding: 10px;
        background-color: #fae100;
        border-radius: 10px;
        margin-right: 10px;
      }
      .other-chat {
        display: flex;
        justify-content: start;
        padding: 2px 0px;
      }
      .other-chat p {
        margin: 0;
        padding: 10px;
        background-color: #ffffff;
        border-radius: 10px;
        margin-left: 10px;
      }
      select {
        margin-left: 5px;
      }
    </style>
  </head>
  <body>
    <div id="main" >
      <form id="room">
        <input type="text" id="roomName" placeholder="채팅방 만들기" />
        <input type="text" id="userName" placeholder="사용자 이름 입력" />
        <button>만들기</button>
      </form>
      <ul id="lists"></ul>
    </div>
    <div id="body" hidden>
      <div id="msg">
      </div>
      <form id="chat">
        <select id="userList"></select>
        <input type="text" id="message" placeholder="메세지 입력" />
        <button><i class="fas fa-arrow-up"></i></button>
      </form>
    </div>

    <script>
      const socket = io();
      const roomForm = document.querySelector('#room');
      const chatForm = document.querySelector('#chat');
      const msg = document.querySelector('#msg');

      let myName;

      //룸리스트
      socket.on('roomList', (roomLists) => {
        console.log('roomList', roomLists);
        const lists = document.querySelector('#lists');
        lists.textContent = '';
        roomLists.forEach((roomList) => {
          const li = document.createElement('li');
          li.textContent = `${roomList} 와 닉네임 입력 후 입장`;
          lists.appendChild(li);
        });
      });

      socket.on('welcome', (res) => {
        const msgBox = document.createElement('div');
        msgBox.id = 'welcome';
        msgBox.textContent = res;
        msg.appendChild(msgBox);
      });

      //사용자 리스트
      socket.on('userList', (userLists) => {
        console.log('userList', userLists);
        const lists = document.querySelector('#userList');
        lists.textContent = '';
        let options = `<option value="all">전체</option>`;
        for (let key in userLists) {
          options += `<option value="${userLists[key]}">${userLists[key]}</option>`;
        }
        lists.innerHTML = options;
      });
      //메세지 띄우기
      socket.on('newMessage', (message, nick) => {
        const div = document.createElement('div');
        const p = document.createElement('p');
        myName === nick 
            ? div.classList.add('my-chat')
            : div.classList.add('other-chat');
        p.textContent = `${nick}: ${message}`;
        div.appendChild(p);
        msg.appendChild(div);
      });

      ///폼 이벤트
      roomForm.addEventListener('submit', (e) => {
        e.preventDefault();
        const roomName = roomForm.querySelector('#roomName');
        const userName = roomForm.querySelector('#userName');
        if (roomName.value === '' || userName.value === '') {
          alert('방이름과 닉네임 적어주세요');
          return;
        }
        socket.emit('create', roomName.value, userName.value, () => {
          const main = document.querySelector('#main');
          const body = document.querySelector('#body');
          main.hidden = true;
          body.hidden = false;
          // 전역 변수에 입력한 닉네임을 저장
          myName = userName.value;
        });
      });
      chatForm.addEventListener('submit', (e) => {
        e.preventDefault();
        const user = document.querySelector('#userList');
        const message = document.querySelector('#message');
        const msg = {
          nick: myName,
          user: user.value,
          message: message.value,
        };
        socket.emit('sendMessage', msg);
        message.value = '';
      });
    </script>
    <script
    src="https://kit.fontawesome.com/6478f529f2.js"
    crossorigin="anonymous"
  ></script>
  </body>
</html>
